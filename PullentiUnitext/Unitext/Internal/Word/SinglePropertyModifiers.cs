/*
 * SDK Pullenti Unitext, version 4.10, november 2021. Copyright (c) 2013, Pullenti. All rights reserved. 
 * Non-Commercial Freeware and Commercial Software. 
 * This class is generated using the converter UniSharping (www.unisharping.ru) from Pullenti C# project. 
 * The latest version of the code is available on the site www.pullenti.ru
 */

using System;
using System.Collections;
using System.Collections.Generic;

namespace Pullenti.Unitext.Internal.Word
{
    static class SinglePropertyModifiers
    {
        internal const ushort sprmCFRMarkDel = 0x0800;
        internal const ushort sprmCFRMarkIns = 0x0801;
        internal const ushort sprmCFFldVanish = 0x0802;
        internal const ushort sprmCPicLocation = 0x6A03;
        internal const ushort sprmCIbstRMark = 0x4804;
        internal const ushort sprmCDttmRMark = 0x6805;
        internal const ushort sprmCFData = 0x0806;
        internal const ushort sprmCIdslRMark = 0x4807;
        internal const ushort sprmCSymbol = 0x6A09;
        internal const ushort sprmCFOle2 = 0x080A;
        internal const ushort sprmCHighlight = 0x2A0C;
        internal const ushort sprmCFWebHidden = 0x0811;
        internal const ushort sprmCRsidProp = 0x6815;
        internal const ushort sprmCRsidText = 0x6816;
        internal const ushort sprmCRsidRMDel = 0x6817;
        internal const ushort sprmCFSpecVanish = 0x0818;
        internal const ushort sprmCFMathPr = 0xC81A;
        internal const ushort sprmCIstd = 0x4A30;
        internal const ushort sprmCIstdPermute = 0xCA31;
        internal const ushort sprmCPlain = 0x2A33;
        internal const ushort sprmCKcd = 0x2A34;
        internal const ushort sprmCFBold = 0x0835;
        internal const ushort sprmCFItalic = 0x0836;
        internal const ushort sprmCFStrike = 0x0837;
        internal const ushort sprmCFOutline = 0x0838;
        internal const ushort sprmCFShadow = 0x0839;
        internal const ushort sprmCFSmallCaps = 0x083A;
        internal const ushort sprmCFCaps = 0x083B;
        internal const ushort sprmCFVanish = 0x083C;
        internal const ushort sprmCKul = 0x2A3E;
        internal const ushort sprmCDxaSpace = 0x8840;
        internal const ushort sprmCIco = 0x2A42;
        internal const ushort sprmCHps = 0x4A43;
        internal const ushort sprmCHpsPos = 0x4845;
        internal const ushort sprmCMajority = 0xCA47;
        internal const ushort sprmCIss = 0x2A48;
        internal const ushort sprmCHpsKern = 0x484B;
        internal const ushort sprmCHresi = 0x484E;
        internal const ushort sprmCRgFtc0 = 0x4A4F;
        internal const ushort sprmCRgFtc1 = 0x4A50;
        internal const ushort sprmCRgFtc2 = 0x4A51;
        internal const ushort sprmCCharScale = 0x4852;
        internal const ushort sprmCFDStrike = 0x2A53;
        internal const ushort sprmCFImprint = 0x0854;
        internal const ushort sprmCFSpec = 0x0855;
        internal const ushort sprmCFObj = 0x0856;
        internal const ushort sprmCPropRMark90 = 0xCA57;
        internal const ushort sprmCFEmboss = 0x0858;
        internal const ushort sprmCSfxText = 0x2859;
        internal const ushort sprmCFBiDi = 0x085A;
        internal const ushort sprmCFBoldBi = 0x085C;
        internal const ushort sprmCFItalicBi = 0x085D;
        internal const ushort sprmCFtcBi = 0x4A5E;
        internal const ushort sprmCLidBi = 0x485F;
        internal const ushort sprmCIcoBi = 0x4A60;
        internal const ushort sprmCHpsBi = 0x4A61;
        internal const ushort sprmCDispFldRMark = 0xCA62;
        internal const ushort sprmCIbstRMarkDel = 0x4863;
        internal const ushort sprmCDttmRMarkDel = 0x6864;
        internal const ushort sprmCBrc80 = 0x6865;
        internal const ushort sprmCShd80 = 0x4866;
        internal const ushort sprmCIdslRMarkDel = 0x4867;
        internal const ushort sprmCFUsePgsuSettings = 0x0868;
        internal const ushort sprmCRgLid0_80 = 0x486D;
        internal const ushort sprmCRgLid1_80 = 0x486E;
        internal const ushort sprmCIdctHint = 0x286F;
        internal const ushort sprmCCv = 0x6870;
        internal const ushort sprmCShd = 0xCA71;
        internal const ushort sprmCBrc = 0xCA72;
        internal const ushort sprmCRgLid0 = 0x4873;
        internal const ushort sprmCRgLid1 = 0x4874;
        internal const ushort sprmCFNoProof = 0x0875;
        internal const ushort sprmCFitText = 0xCA76;
        internal const ushort sprmCCvUl = 0x6877;
        internal const ushort sprmCFELayout = 0xCA78;
        internal const ushort sprmCLbcCRJ = 0x2879;
        internal const ushort sprmCFComplexScripts = 0x0882;
        internal const ushort sprmCWall = 0x2A83;
        internal const ushort sprmCCnf = 0xCA85;
        internal const ushort sprmCNeedFontFixup = 0x2A86;
        internal const ushort sprmCPbiIBullet = 0x6887;
        internal const ushort sprmCPbiGrf = 0x4888;
        internal const ushort sprmCPropRMark = 0xCA89;
        internal const ushort sprmCFSdtVanish = 0x2A90;
        internal const ushort sprmPIstd = 0x4600;
        internal const ushort sprmPIstdPermute = 0xC601;
        internal const ushort sprmPIncLvl = 0x2602;
        internal const ushort sprmPJc80 = 0x2403;
        internal const ushort sprmPFKeep = 0x2405;
        internal const ushort sprmPFKeepFollow = 0x2406;
        internal const ushort sprmPFPageBreakBefore = 0x2407;
        internal const ushort sprmPIlvl = 0x260A;
        internal const ushort sprmPIlfo = 0x460B;
        internal const ushort sprmPFNoLineNumb = 0x240C;
        internal const ushort sprmPChgTabsPapx = 0xC60D;
        internal const ushort sprmPDxaRight80 = 0x840E;
        internal const ushort sprmPDxaLeft80 = 0x840F;
        internal const ushort sprmPNest80 = 0x4610;
        internal const ushort sprmPDxaLeft180 = 0x8411;
        internal const ushort sprmPDyaLine = 0x6412;
        internal const ushort sprmPDyaBefore = 0xA413;
        internal const ushort sprmPDyaAfter = 0xA414;
        internal const ushort sprmPChgTabs = 0xC615;
        internal const ushort sprmPFInTable = 0x2416;
        internal const ushort sprmPFTtp = 0x2417;
        internal const ushort sprmPDxaAbs = 0x8418;
        internal const ushort sprmPDyaAbs = 0x8419;
        internal const ushort sprmPDxaWidth = 0x841A;
        internal const ushort sprmPPc = 0x261B;
        internal const ushort sprmPWr = 0x2423;
        internal const ushort sprmPBrcTop80 = 0x6424;
        internal const ushort sprmPBrcLeft80 = 0x6425;
        internal const ushort sprmPBrcBottom80 = 0x6426;
        internal const ushort sprmPBrcRight80 = 0x6427;
        internal const ushort sprmPBrcBetween80 = 0x6428;
        internal const ushort sprmPBrcBar80 = 0x6629;
        internal const ushort sprmPFNoAutoHyph = 0x242A;
        internal const ushort sprmPWHeightAbs = 0x442B;
        internal const ushort sprmPDcs = 0x442C;
        internal const ushort sprmPShd80 = 0x442D;
        internal const ushort sprmPDyaFromText = 0x842E;
        internal const ushort sprmPDxaFromText = 0x842F;
        internal const ushort sprmPFLocked = 0x2430;
        internal const ushort sprmPFWidowControl = 0x2431;
        internal const ushort sprmPFKinsoku = 0x2433;
        internal const ushort sprmPFWordWrap = 0x2434;
        internal const ushort sprmPFOverflowPunct = 0x2435;
        internal const ushort sprmPFTopLinePunct = 0x2436;
        internal const ushort sprmPFAutoSpaceDE = 0x2437;
        internal const ushort sprmPFAutoSpaceDN = 0x2438;
        internal const ushort sprmPWAlignFont = 0x4439;
        internal const ushort sprmPFrameTextFlow = 0x443A;
        internal const ushort sprmPOutLvl = 0x2640;
        internal const ushort sprmPFBiDi = 0x2441;
        internal const ushort sprmPFNumRMIns = 0x2443;
        internal const ushort sprmPNumRM = 0xC645;
        internal const ushort sprmPHugePapx = 0x6646;
        internal const ushort sprmPFUsePgsuSettings = 0x2447;
        internal const ushort sprmPFAdjustRight = 0x2448;
        internal const ushort sprmPItap = 0x6649;
        internal const ushort sprmPDtap = 0x664A;
        internal const ushort sprmPFInnerTableCell = 0x244B;
        internal const ushort sprmPFInnerTtp = 0x244C;
        internal const ushort sprmPShd = 0xC64D;
        internal const ushort sprmPBrcTop = 0xC64E;
        internal const ushort sprmPBrcLeft = 0xC64F;
        internal const ushort sprmPBrcBottom = 0xC650;
        internal const ushort sprmPBrcRight = 0xC651;
        internal const ushort sprmPBrcBetween = 0xC652;
        internal const ushort sprmPBrcBar = 0xC653;
        internal const ushort sprmPDxcRight = 0x4455;
        internal const ushort sprmPDxcLeft = 0x4456;
        internal const ushort sprmPDxcLeft1 = 0x4457;
        internal const ushort sprmPDylBefore = 0x4458;
        internal const ushort sprmPDylAfter = 0x4459;
        internal const ushort sprmPFOpenTch = 0x245A;
        internal const ushort sprmPFDyaBeforeAuto = 0x245B;
        internal const ushort sprmPFDyaAfterAuto = 0x245C;
        internal const ushort sprmPDxaRight = 0x845D;
        internal const ushort sprmPDxaLeft = 0x845E;
        internal const ushort sprmPNest = 0x465F;
        internal const ushort sprmPDxaLeft1 = 0x8460;
        internal const ushort sprmPJc = 0x2461;
        internal const ushort sprmPFNoAllowOverlap = 0x2462;
        internal const ushort sprmPWall = 0x2664;
        internal const ushort sprmPIpgp = 0x6465;
        internal const ushort sprmPCnf = 0xC666;
        internal const ushort sprmPRsid = 0x6467;
        internal const ushort sprmPIstdListPermute = 0xC669;
        internal const ushort sprmPTableProps = 0x646B;
        internal const ushort sprmPTIstdInfo = 0xC66C;
        internal const ushort sprmPFContextualSpacing = 0x246D;
        internal const ushort sprmPPropRMark = 0xC66F;
        internal const ushort sprmPFMirrorIndents = 0x2470;
        internal const ushort sprmPTtwo = 0x2471;
        internal const ushort sprmTJc90 = 0x5400;
        internal const ushort sprmTDxaLeft = 0x9601;
        internal const ushort sprmTDxaGapHalf = 0x9602;
        internal const ushort sprmTFCantSplit90 = 0x3403;
        internal const ushort sprmTTableHeader = 0x3404;
        internal const ushort sprmTTableBorders80 = 0xD605;
        internal const ushort sprmTDyaRowHeight = 0x9407;
        internal const ushort sprmTDefTable = 0xD608;
        internal const ushort sprmTDefTableShd80 = 0xD609;
        internal const ushort sprmTTlp = 0x740A;
        internal const ushort sprmTFBiDi = 0x560B;
        internal const ushort sprmTDefTableShd3rd = 0xD60C;
        internal const ushort sprmTPc = 0x360D;
        internal const ushort sprmTDxaAbs = 0x940E;
        internal const ushort sprmTDyaAbs = 0x940F;
        internal const ushort sprmTDxaFromText = 0x9410;
        internal const ushort sprmTDyaFromText = 0x9411;
        internal const ushort sprmTDefTableShd = 0xD612;
        internal const ushort sprmTTableBorders = 0xD613;
        internal const ushort sprmTTableWidth = 0xF614;
        internal const ushort sprmTFAutofit = 0x3615;
        internal const ushort sprmTDefTableShd2nd = 0xD616;
        internal const ushort sprmTWidthBefore = 0xF617;
        internal const ushort sprmTWidthAfter = 0xF618;
        internal const ushort sprmTFKeepFollow = 0x3619;
        internal const ushort sprmTBrcTopCv = 0xD61A;
        internal const ushort sprmTBrcLeftCv = 0xD61B;
        internal const ushort sprmTBrcBottomCv = 0xD61C;
        internal const ushort sprmTBrcRightCv = 0xD61D;
        internal const ushort sprmTDxaFromTextRight = 0x941E;
        internal const ushort sprmTDyaFromTextBottom = 0x941F;
        internal const ushort sprmTSetBrc80 = 0xD620;
        internal const ushort sprmTInsert = 0x7621;
        internal const ushort sprmTDelete = 0x5622;
        internal const ushort sprmTDxaCol = 0x7623;
        internal const ushort sprmTMerge = 0x5624;
        internal const ushort sprmTSplit = 0x5625;
        internal const ushort sprmTTextFlow = 0x7629;
        internal const ushort sprmTVertMerge = 0xD62B;
        internal const ushort sprmTVertAlign = 0xD62C;
        internal const ushort sprmTSetShd = 0xD62D;
        internal const ushort sprmTSetShdOdd = 0xD62E;
        internal const ushort sprmTSetBrc = 0xD62F;
        internal const ushort sprmTCellPadding = 0xD632;
        internal const ushort sprmTCellSpacingDefault = 0xD633;
        internal const ushort sprmTCellPaddingDefault = 0xD634;
        internal const ushort sprmTCellWidth = 0xD635;
        internal const ushort sprmTFitText = 0xF636;
        internal const ushort sprmTFCellNoWrap = 0xD639;
        internal const ushort sprmTIstd = 0x563A;
        internal const ushort sprmTCellPaddingStyle = 0xD63E;
        internal const ushort sprmTCellFHideMark = 0xD642;
        internal const ushort sprmTSetShdTable = 0xD660;
        internal const ushort sprmTWidthIndent = 0xF661;
        internal const ushort sprmTCellBrcType = 0xD662;
        internal const ushort sprmTFBiDi90 = 0x5664;
        internal const ushort sprmTFNoAllowOverlap = 0x3465;
        internal const ushort sprmTFCantSplit = 0x3466;
        internal const ushort sprmTPropRMark = 0xD667;
        internal const ushort sprmTWall = 0x3668;
        internal const ushort sprmTIpgp = 0x7469;
        internal const ushort sprmTCnf = 0xD66A;
        internal const ushort sprmTDefTableShdRaw = 0xD670;
        internal const ushort sprmTDefTableShdRaw2nd = 0xD671;
        internal const ushort sprmTDefTableShdRaw3rd = 0xD672;
        internal const ushort sprmTRsid = 0x7479;
        internal const ushort sprmTCellVertAlignStyle = 0x347C;
        internal const ushort sprmTCellNoWrapStyle = 0x347D;
        internal const ushort sprmTCellBrcTopStyle = 0xD47F;
        internal const ushort sprmTCellBrcBottomStyle = 0xD680;
        internal const ushort sprmTCellBrcLeftStyle = 0xD681;
        internal const ushort sprmTCellBrcRightStyle = 0xD682;
        internal const ushort sprmTCellBrcInsideHStyle = 0xD683;
        internal const ushort sprmTCellBrcInsideVStyle = 0xD684;
        internal const ushort sprmTCellBrcTL2BRStyle = 0xD685;
        internal const ushort sprmTCellBrcTR2BLStyle = 0xD686;
        internal const ushort sprmTCellShdStyle = 0xD687;
        internal const ushort sprmTCHorzBands = 0x3488;
        internal const ushort sprmTCVertBands = 0x3489;
        internal const ushort sprmTJc = 0x548A;
        internal const ushort sprmScnsPgn = 0x3000;
        internal const ushort sprmSiHeadingPgn = 0x3001;
        internal const ushort sprmSDxaColWidth = 0xF203;
        internal const ushort sprmSDxaColSpacing = 0xF204;
        internal const ushort sprmSFEvenlySpaced = 0x3005;
        internal const ushort sprmSFProtected = 0x3006;
        internal const ushort sprmSDmBinFirst = 0x5007;
        internal const ushort sprmSDmBinOther = 0x5008;
        internal const ushort sprmSBkc = 0x3009;
        internal const ushort sprmSFTitlePage = 0x300A;
        internal const ushort sprmSCcolumns = 0x500B;
        internal const ushort sprmSDxaColumns = 0x900C;
        internal const ushort sprmSNfcPgn = 0x300E;
        internal const ushort sprmSFPgnRestart = 0x3011;
        internal const ushort sprmSFEndnote = 0x3012;
        internal const ushort sprmSLnc = 0x3013;
        internal const ushort sprmSNLnnMod = 0x5015;
        internal const ushort sprmSDxaLnn = 0x9016;
        internal const ushort sprmSDyaHdrTop = 0xB017;
        internal const ushort sprmSDyaHdrBottom = 0xB018;
        internal const ushort sprmSLBetween = 0x3019;
        internal const ushort sprmSVjc = 0x301A;
        internal const ushort sprmSLnnMin = 0x501B;
        internal const ushort sprmSPgnStart97 = 0x501C;
        internal const ushort sprmSBOrientation = 0x301D;
        internal const ushort sprmSXaPage = 0xB01F;
        internal const ushort sprmSYaPage = 0xB020;
        internal const ushort sprmSDxaLeft = 0xB021;
        internal const ushort sprmSDxaRight = 0xB022;
        internal const ushort sprmSDyaTop = 0x9023;
        internal const ushort sprmSDyaBottom = 0x9024;
        internal const ushort sprmSDzaGutter = 0xB025;
        internal const ushort sprmSDmPaperReq = 0x5026;
        internal const ushort sprmSFBiDi = 0x3228;
        internal const ushort sprmSFRTLGutter = 0x322A;
        internal const ushort sprmSBrcTop80 = 0x702B;
        internal const ushort sprmSBrcLeft80 = 0x702C;
        internal const ushort sprmSBrcBottom80 = 0x702D;
        internal const ushort sprmSBrcRight80 = 0x702E;
        internal const ushort sprmSPgbProp = 0x522F;
        internal const ushort sprmSDxtCharSpace = 0x7030;
        internal const ushort sprmSDyaLinePitch = 0x9031;
        internal const ushort sprmSClm = 0x5032;
        internal const ushort sprmSTextFlow = 0x5033;
        internal const ushort sprmSBrcTop = 0xD234;
        internal const ushort sprmSBrcLeft = 0xD235;
        internal const ushort sprmSBrcBottom = 0xD236;
        internal const ushort sprmSBrcRight = 0xD237;
        internal const ushort sprmSWall = 0x3239;
        internal const ushort sprmSRsid = 0x703A;
        internal const ushort sprmSFpc = 0x303B;
        internal const ushort sprmSRncFtn = 0x303C;
        internal const ushort sprmSRncEdn = 0x303E;
        internal const ushort sprmSNFtn = 0x503F;
        internal const ushort sprmSNfcFtnRef = 0x5040;
        internal const ushort sprmSNEdn = 0x5041;
        internal const ushort sprmSNfcEdnRef = 0x5042;
        internal const ushort sprmSPropRMark = 0xD243;
        internal const ushort sprmSPgnStart = 0x7044;
        internal const ushort sprmPicBrcTop80 = 0x6C02;
        internal const ushort sprmPicBrcLeft80 = 0x6C03;
        internal const ushort sprmPicBrcBottom80 = 0x6C04;
        internal const ushort sprmPicBrcRight80 = 0x6C05;
        internal const ushort sprmPicBrcTop = 0xCE08;
        internal const ushort sprmPicBrcLeft = 0xCE09;
        internal const ushort sprmPicBrcBottom = 0xCE0A;
        internal static Dictionary<ushort, string> map;
        internal static Dictionary<string, ushort> map2;
        internal static Dictionary<byte, ushort> prm0Map;
        static SinglePropertyModifiers()
        {
            map = new Dictionary<ushort, string>();
            map.Add(0x0800, "sprmCFRMarkDel");
            map.Add(0x0801, "sprmCFRMarkIns");
            map.Add(0x0802, "sprmCFFldVanish");
            map.Add(0x6A03, "sprmCPicLocation");
            map.Add(0x4804, "sprmCIbstRMark");
            map.Add(0x6805, "sprmCDttmRMark");
            map.Add(0x0806, "sprmCFData");
            map.Add(0x4807, "sprmCIdslRMark");
            map.Add(0x6A09, "sprmCSymbol");
            map.Add(0x080A, "sprmCFOle2");
            map.Add(0x2A0C, "sprmCHighlight");
            map.Add(0x0811, "sprmCFWebHidden");
            map.Add(0x6815, "sprmCRsidProp");
            map.Add(0x6816, "sprmCRsidText");
            map.Add(0x6817, "sprmCRsidRMDel");
            map.Add(0x0818, "sprmCFSpecVanish");
            map.Add(0xC81A, "sprmCFMathPr");
            map.Add(0x4A30, "sprmCIstd");
            map.Add(0xCA31, "sprmCIstdPermute");
            map.Add(0x2A33, "sprmCPlain");
            map.Add(0x2A34, "sprmCKcd");
            map.Add(0x0835, "sprmCFBold");
            map.Add(0x0836, "sprmCFItalic");
            map.Add(0x0837, "sprmCFStrike");
            map.Add(0x0838, "sprmCFOutline");
            map.Add(0x0839, "sprmCFShadow");
            map.Add(0x083A, "sprmCFSmallCaps");
            map.Add(0x083B, "sprmCFCaps");
            map.Add(0x083C, "sprmCFVanish");
            map.Add(0x2A3E, "sprmCKul");
            map.Add(0x8840, "sprmCDxaSpace");
            map.Add(0x2A42, "sprmCIco");
            map.Add(0x4A43, "sprmCHps");
            map.Add(0x4845, "sprmCHpsPos");
            map.Add(0xCA47, "sprmCMajority");
            map.Add(0x2A48, "sprmCIss");
            map.Add(0x484B, "sprmCHpsKern");
            map.Add(0x484E, "sprmCHresi");
            map.Add(0x4A4F, "sprmCRgFtc0");
            map.Add(0x4A50, "sprmCRgFtc1");
            map.Add(0x4A51, "sprmCRgFtc2");
            map.Add(0x4852, "sprmCCharScale");
            map.Add(0x2A53, "sprmCFDStrike");
            map.Add(0x0854, "sprmCFImprint");
            map.Add(0x0855, "sprmCFSpec");
            map.Add(0x0856, "sprmCFObj");
            map.Add(0xCA57, "sprmCPropRMark90");
            map.Add(0x0858, "sprmCFEmboss");
            map.Add(0x2859, "sprmCSfxText");
            map.Add(0x085A, "sprmCFBiDi");
            map.Add(0x085C, "sprmCFBoldBi");
            map.Add(0x085D, "sprmCFItalicBi");
            map.Add(0x4A5E, "sprmCFtcBi");
            map.Add(0x485F, "sprmCLidBi");
            map.Add(0x4A60, "sprmCIcoBi");
            map.Add(0x4A61, "sprmCHpsBi");
            map.Add(0xCA62, "sprmCDispFldRMark");
            map.Add(0x4863, "sprmCIbstRMarkDel");
            map.Add(0x6864, "sprmCDttmRMarkDel");
            map.Add(0x6865, "sprmCBrc80");
            map.Add(0x4866, "sprmCShd80");
            map.Add(0x4867, "sprmCIdslRMarkDel");
            map.Add(0x0868, "sprmCFUsePgsuSettings");
            map.Add(0x486D, "sprmCRgLid0_80");
            map.Add(0x486E, "sprmCRgLid1_80");
            map.Add(0x286F, "sprmCIdctHint");
            map.Add(0x6870, "sprmCCv");
            map.Add(0xCA71, "sprmCShd");
            map.Add(0xCA72, "sprmCBrc");
            map.Add(0x4873, "sprmCRgLid0");
            map.Add(0x4874, "sprmCRgLid1");
            map.Add(0x0875, "sprmCFNoProof");
            map.Add(0xCA76, "sprmCFitText");
            map.Add(0x6877, "sprmCCvUl");
            map.Add(0xCA78, "sprmCFELayout");
            map.Add(0x2879, "sprmCLbcCRJ");
            map.Add(0x0882, "sprmCFComplexScripts");
            map.Add(0x2A83, "sprmCWall");
            map.Add(0xCA85, "sprmCCnf");
            map.Add(0x2A86, "sprmCNeedFontFixup");
            map.Add(0x6887, "sprmCPbiIBullet");
            map.Add(0x4888, "sprmCPbiGrf");
            map.Add(0xCA89, "sprmCPropRMark");
            map.Add(0x2A90, "sprmCFSdtVanish");
            map.Add(0x4600, "sprmPIstd");
            map.Add(0xC601, "sprmPIstdPermute");
            map.Add(0x2602, "sprmPIncLvl");
            map.Add(0x2403, "sprmPJc80");
            map.Add(0x2405, "sprmPFKeep");
            map.Add(0x2406, "sprmPFKeepFollow");
            map.Add(0x2407, "sprmPFPageBreakBefore");
            map.Add(0x260A, "sprmPIlvl");
            map.Add(0x460B, "sprmPIlfo");
            map.Add(0x240C, "sprmPFNoLineNumb");
            map.Add(0xC60D, "sprmPChgTabsPapx");
            map.Add(0x840E, "sprmPDxaRight80");
            map.Add(0x840F, "sprmPDxaLeft80");
            map.Add(0x4610, "sprmPNest80");
            map.Add(0x8411, "sprmPDxaLeft180");
            map.Add(0x6412, "sprmPDyaLine");
            map.Add(0xA413, "sprmPDyaBefore");
            map.Add(0xA414, "sprmPDyaAfter");
            map.Add(0xC615, "sprmPChgTabs");
            map.Add(0x2416, "sprmPFInTable");
            map.Add(0x2417, "sprmPFTtp");
            map.Add(0x8418, "sprmPDxaAbs");
            map.Add(0x8419, "sprmPDyaAbs");
            map.Add(0x841A, "sprmPDxaWidth");
            map.Add(0x261B, "sprmPPc");
            map.Add(0x2423, "sprmPWr");
            map.Add(0x6424, "sprmPBrcTop80");
            map.Add(0x6425, "sprmPBrcLeft80");
            map.Add(0x6426, "sprmPBrcBottom80");
            map.Add(0x6427, "sprmPBrcRight80");
            map.Add(0x6428, "sprmPBrcBetween80");
            map.Add(0x6629, "sprmPBrcBar80");
            map.Add(0x242A, "sprmPFNoAutoHyph");
            map.Add(0x442B, "sprmPWHeightAbs");
            map.Add(0x442C, "sprmPDcs");
            map.Add(0x442D, "sprmPShd80");
            map.Add(0x842E, "sprmPDyaFromText");
            map.Add(0x842F, "sprmPDxaFromText");
            map.Add(0x2430, "sprmPFLocked");
            map.Add(0x2431, "sprmPFWidowControl");
            map.Add(0x2433, "sprmPFKinsoku");
            map.Add(0x2434, "sprmPFWordWrap");
            map.Add(0x2435, "sprmPFOverflowPunct");
            map.Add(0x2436, "sprmPFTopLinePunct");
            map.Add(0x2437, "sprmPFAutoSpaceDE");
            map.Add(0x2438, "sprmPFAutoSpaceDN");
            map.Add(0x4439, "sprmPWAlignFont");
            map.Add(0x443A, "sprmPFrameTextFlow");
            map.Add(0x2640, "sprmPOutLvl");
            map.Add(0x2441, "sprmPFBiDi");
            map.Add(0x2443, "sprmPFNumRMIns");
            map.Add(0xC645, "sprmPNumRM");
            map.Add(0x6646, "sprmPHugePapx");
            map.Add(0x2447, "sprmPFUsePgsuSettings");
            map.Add(0x2448, "sprmPFAdjustRight");
            map.Add(0x6649, "sprmPItap");
            map.Add(0x664A, "sprmPDtap");
            map.Add(0x244B, "sprmPFInnerTableCell");
            map.Add(0x244C, "sprmPFInnerTtp");
            map.Add(0xC64D, "sprmPShd");
            map.Add(0xC64E, "sprmPBrcTop");
            map.Add(0xC64F, "sprmPBrcLeft");
            map.Add(0xC650, "sprmPBrcBottom");
            map.Add(0xC651, "sprmPBrcRight");
            map.Add(0xC652, "sprmPBrcBetween");
            map.Add(0xC653, "sprmPBrcBar");
            map.Add(0x4455, "sprmPDxcRight");
            map.Add(0x4456, "sprmPDxcLeft");
            map.Add(0x4457, "sprmPDxcLeft1");
            map.Add(0x4458, "sprmPDylBefore");
            map.Add(0x4459, "sprmPDylAfter");
            map.Add(0x245A, "sprmPFOpenTch");
            map.Add(0x245B, "sprmPFDyaBeforeAuto");
            map.Add(0x245C, "sprmPFDyaAfterAuto");
            map.Add(0x845D, "sprmPDxaRight");
            map.Add(0x845E, "sprmPDxaLeft");
            map.Add(0x465F, "sprmPNest");
            map.Add(0x8460, "sprmPDxaLeft1");
            map.Add(0x2461, "sprmPJc");
            map.Add(0x2462, "sprmPFNoAllowOverlap");
            map.Add(0x2664, "sprmPWall");
            map.Add(0x6465, "sprmPIpgp");
            map.Add(0xC666, "sprmPCnf");
            map.Add(0x6467, "sprmPRsid");
            map.Add(0xC669, "sprmPIstdListPermute");
            map.Add(0x646B, "sprmPTableProps");
            map.Add(0xC66C, "sprmPTIstdInfo");
            map.Add(0x246D, "sprmPFContextualSpacing");
            map.Add(0xC66F, "sprmPPropRMark");
            map.Add(0x2470, "sprmPFMirrorIndents");
            map.Add(0x2471, "sprmPTtwo");
            map.Add(0x5400, "sprmTJc90");
            map.Add(0x9601, "sprmTDxaLeft");
            map.Add(0x9602, "sprmTDxaGapHalf");
            map.Add(0x3403, "sprmTFCantSplit90");
            map.Add(0x3404, "sprmTTableHeader");
            map.Add(0xD605, "sprmTTableBorders80");
            map.Add(0x9407, "sprmTDyaRowHeight");
            map.Add(0xD608, "sprmTDefTable");
            map.Add(0xD609, "sprmTDefTableShd80");
            map.Add(0x740A, "sprmTTlp");
            map.Add(0x560B, "sprmTFBiDi");
            map.Add(0xD60C, "sprmTDefTableShd3rd");
            map.Add(0x360D, "sprmTPc");
            map.Add(0x940E, "sprmTDxaAbs");
            map.Add(0x940F, "sprmTDyaAbs");
            map.Add(0x9410, "sprmTDxaFromText");
            map.Add(0x9411, "sprmTDyaFromText");
            map.Add(0xD612, "sprmTDefTableShd");
            map.Add(0xD613, "sprmTTableBorders");
            map.Add(0xF614, "sprmTTableWidth");
            map.Add(0x3615, "sprmTFAutofit");
            map.Add(0xD616, "sprmTDefTableShd2nd");
            map.Add(0xF617, "sprmTWidthBefore");
            map.Add(0xF618, "sprmTWidthAfter");
            map.Add(0x3619, "sprmTFKeepFollow");
            map.Add(0xD61A, "sprmTBrcTopCv");
            map.Add(0xD61B, "sprmTBrcLeftCv");
            map.Add(0xD61C, "sprmTBrcBottomCv");
            map.Add(0xD61D, "sprmTBrcRightCv");
            map.Add(0x941E, "sprmTDxaFromTextRight");
            map.Add(0x941F, "sprmTDyaFromTextBottom");
            map.Add(0xD620, "sprmTSetBrc80");
            map.Add(0x7621, "sprmTInsert");
            map.Add(0x5622, "sprmTDelete");
            map.Add(0x7623, "sprmTDxaCol");
            map.Add(0x5624, "sprmTMerge");
            map.Add(0x5625, "sprmTSplit");
            map.Add(0x7629, "sprmTTextFlow");
            map.Add(0xD62B, "sprmTVertMerge");
            map.Add(0xD62C, "sprmTVertAlign");
            map.Add(0xD62D, "sprmTSetShd");
            map.Add(0xD62E, "sprmTSetShdOdd");
            map.Add(0xD62F, "sprmTSetBrc");
            map.Add(0xD632, "sprmTCellPadding");
            map.Add(0xD633, "sprmTCellSpacingDefault");
            map.Add(0xD634, "sprmTCellPaddingDefault");
            map.Add(0xD635, "sprmTCellWidth");
            map.Add(0xF636, "sprmTFitText");
            map.Add(0xD639, "sprmTFCellNoWrap");
            map.Add(0x563A, "sprmTIstd");
            map.Add(0xD63E, "sprmTCellPaddingStyle");
            map.Add(0xD642, "sprmTCellFHideMark");
            map.Add(0xD660, "sprmTSetShdTable");
            map.Add(0xF661, "sprmTWidthIndent");
            map.Add(0xD662, "sprmTCellBrcType");
            map.Add(0x5664, "sprmTFBiDi90");
            map.Add(0x3465, "sprmTFNoAllowOverlap");
            map.Add(0x3466, "sprmTFCantSplit");
            map.Add(0xD667, "sprmTPropRMark");
            map.Add(0x3668, "sprmTWall");
            map.Add(0x7469, "sprmTIpgp");
            map.Add(0xD66A, "sprmTCnf");
            map.Add(0xD670, "sprmTDefTableShdRaw");
            map.Add(0xD671, "sprmTDefTableShdRaw2nd");
            map.Add(0xD672, "sprmTDefTableShdRaw3rd");
            map.Add(0x7479, "sprmTRsid");
            map.Add(0x347C, "sprmTCellVertAlignStyle");
            map.Add(0x347D, "sprmTCellNoWrapStyle");
            map.Add(0xD47F, "sprmTCellBrcTopStyle");
            map.Add(0xD680, "sprmTCellBrcBottomStyle");
            map.Add(0xD681, "sprmTCellBrcLeftStyle");
            map.Add(0xD682, "sprmTCellBrcRightStyle");
            map.Add(0xD683, "sprmTCellBrcInsideHStyle");
            map.Add(0xD684, "sprmTCellBrcInsideVStyle");
            map.Add(0xD685, "sprmTCellBrcTL2BRStyle");
            map.Add(0xD686, "sprmTCellBrcTR2BLStyle");
            map.Add(0xD687, "sprmTCellShdStyle");
            map.Add(0x3488, "sprmTCHorzBands");
            map.Add(0x3489, "sprmTCVertBands");
            map.Add(0x548A, "sprmTJc");
            map.Add(0x3000, "sprmScnsPgn");
            map.Add(0x3001, "sprmSiHeadingPgn");
            map.Add(0xF203, "sprmSDxaColWidth");
            map.Add(0xF204, "sprmSDxaColSpacing");
            map.Add(0x3005, "sprmSFEvenlySpaced");
            map.Add(0x3006, "sprmSFProtected");
            map.Add(0x5007, "sprmSDmBinFirst");
            map.Add(0x5008, "sprmSDmBinOther");
            map.Add(0x3009, "sprmSBkc");
            map.Add(0x300A, "sprmSFTitlePage");
            map.Add(0x500B, "sprmSCcolumns");
            map.Add(0x900C, "sprmSDxaColumns");
            map.Add(0x300E, "sprmSNfcPgn");
            map.Add(0x3011, "sprmSFPgnRestart");
            map.Add(0x3012, "sprmSFEndnote");
            map.Add(0x3013, "sprmSLnc");
            map.Add(0x5015, "sprmSNLnnMod");
            map.Add(0x9016, "sprmSDxaLnn");
            map.Add(0xB017, "sprmSDyaHdrTop");
            map.Add(0xB018, "sprmSDyaHdrBottom");
            map.Add(0x3019, "sprmSLBetween");
            map.Add(0x301A, "sprmSVjc");
            map.Add(0x501B, "sprmSLnnMin");
            map.Add(0x501C, "sprmSPgnStart97");
            map.Add(0x301D, "sprmSBOrientation");
            map.Add(0xB01F, "sprmSXaPage");
            map.Add(0xB020, "sprmSYaPage");
            map.Add(0xB021, "sprmSDxaLeft");
            map.Add(0xB022, "sprmSDxaRight");
            map.Add(0x9023, "sprmSDyaTop");
            map.Add(0x9024, "sprmSDyaBottom");
            map.Add(0xB025, "sprmSDzaGutter");
            map.Add(0x5026, "sprmSDmPaperReq");
            map.Add(0x3228, "sprmSFBiDi");
            map.Add(0x322A, "sprmSFRTLGutter");
            map.Add(0x702B, "sprmSBrcTop80");
            map.Add(0x702C, "sprmSBrcLeft80");
            map.Add(0x702D, "sprmSBrcBottom80");
            map.Add(0x702E, "sprmSBrcRight80");
            map.Add(0x522F, "sprmSPgbProp");
            map.Add(0x7030, "sprmSDxtCharSpace");
            map.Add(0x9031, "sprmSDyaLinePitch");
            map.Add(0x5032, "sprmSClm");
            map.Add(0x5033, "sprmSTextFlow");
            map.Add(0xD234, "sprmSBrcTop");
            map.Add(0xD235, "sprmSBrcLeft");
            map.Add(0xD236, "sprmSBrcBottom");
            map.Add(0xD237, "sprmSBrcRight");
            map.Add(0x3239, "sprmSWall");
            map.Add(0x703A, "sprmSRsid");
            map.Add(0x303B, "sprmSFpc");
            map.Add(0x303C, "sprmSRncFtn");
            map.Add(0x303E, "sprmSRncEdn");
            map.Add(0x503F, "sprmSNFtn");
            map.Add(0x5040, "sprmSNfcFtnRef");
            map.Add(0x5041, "sprmSNEdn");
            map.Add(0x5042, "sprmSNfcEdnRef");
            map.Add(0xD243, "sprmSPropRMark");
            map.Add(0x7044, "sprmSPgnStart");
            map.Add(0x6C02, "sprmPicBrcTop80");
            map.Add(0x6C03, "sprmPicBrcLeft80");
            map.Add(0x6C04, "sprmPicBrcBottom80");
            map.Add(0x6C05, "sprmPicBrcRight80");
            map.Add(0xCE08, "sprmPicBrcTop");
            map.Add(0xCE09, "sprmPicBrcLeft");
            map.Add(0xCE0A, "sprmPicBrcBottom");
            map2 = new Dictionary<string, ushort>();
            foreach (KeyValuePair<ushort, string> kp in map) 
            {
                map2.Add(kp.Value, kp.Key);
            }
            prm0Map = new Dictionary<byte, ushort>();
            prm0Map.Add(0x00, sprmCLbcCRJ);
            prm0Map.Add(0x04, sprmPIncLvl);
            prm0Map.Add(0x05, sprmPJc);
            prm0Map.Add(0x07, sprmPFKeep);
            prm0Map.Add(0x08, sprmPFKeepFollow);
            prm0Map.Add(0x09, sprmPFPageBreakBefore);
            prm0Map.Add(0x0C, sprmPIlvl);
            prm0Map.Add(0x0D, sprmPFMirrorIndents);
            prm0Map.Add(0x0E, sprmPFNoLineNumb);
            prm0Map.Add(0x0F, sprmPTtwo);
            prm0Map.Add(0x18, sprmPFInTable);
            prm0Map.Add(0x19, sprmPFTtp);
            prm0Map.Add(0x1D, sprmPPc);
            prm0Map.Add(0x25, sprmPWr);
            prm0Map.Add(0x2C, sprmPFNoAutoHyph);
            prm0Map.Add(0x32, sprmPFLocked);
            prm0Map.Add(0x33, sprmPFWidowControl);
            prm0Map.Add(0x35, sprmPFKinsoku);
            prm0Map.Add(0x36, sprmPFWordWrap);
            prm0Map.Add(0x37, sprmPFOverflowPunct);
            prm0Map.Add(0x38, sprmPFTopLinePunct);
            prm0Map.Add(0x39, sprmPFAutoSpaceDE);
            prm0Map.Add(0x3A, sprmPFAutoSpaceDN);
            prm0Map.Add(0x41, sprmCFRMarkDel);
            prm0Map.Add(0x42, sprmCFRMarkIns);
            prm0Map.Add(0x43, sprmCFFldVanish);
            prm0Map.Add(0x47, sprmCFData);
            prm0Map.Add(0x4B, sprmCFOle2);
            prm0Map.Add(0x4D, sprmCHighlight);
            prm0Map.Add(0x4E, sprmCFEmboss);
            prm0Map.Add(0x4F, sprmCSfxText);
            prm0Map.Add(0x50, sprmCFWebHidden);
            prm0Map.Add(0x51, sprmCFSpecVanish);
            prm0Map.Add(0x53, sprmCPlain);
            prm0Map.Add(0x55, sprmCFBold);
            prm0Map.Add(0x56, sprmCFItalic);
            prm0Map.Add(0x57, sprmCFStrike);
            prm0Map.Add(0x58, sprmCFOutline);
            prm0Map.Add(0x59, sprmCFShadow);
            prm0Map.Add(0x5A, sprmCFSmallCaps);
            prm0Map.Add(0x5B, sprmCFCaps);
            prm0Map.Add(0x5C, sprmCFVanish);
            prm0Map.Add(0x5E, sprmCKul);
            prm0Map.Add(0x62, sprmCIco);
            prm0Map.Add(0x68, sprmCIss);
            prm0Map.Add(0x73, sprmCFDStrike);
            prm0Map.Add(0x74, sprmCFImprint);
            prm0Map.Add(0x75, sprmCFSpec);
            prm0Map.Add(0x76, sprmCFObj);
            prm0Map.Add(0x78, sprmPOutLvl);
            prm0Map.Add(0x7B, sprmCFSdtVanish);
            prm0Map.Add(0x7C, sprmCNeedFontFixup);
            prm0Map.Add(0x7E, sprmPFNumRMIns);
        }
        internal static ushort GetSprmByName(string name)
        {
            ushort res;
            if (map2.TryGetValue(name, out res)) 
                return res;
            throw new Exception("Invalid SPRM name: " + name);
        }
        public static string GetSprmName(ushort sprm)
        {
            string res;
            if (!map.TryGetValue(sprm, out res)) 
                return null;
            else 
                return res;
        }
    }
}